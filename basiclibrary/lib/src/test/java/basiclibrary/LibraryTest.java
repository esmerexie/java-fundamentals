/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void testRoll() {

        int diceRolls = 4;

        int[] rollResults = Library.roll(diceRolls);

        assertTrue(rollResults.length == diceRolls);
    }

    @Test void testCompareDuplicate() {
        int [] compareArray = {4, 3, 6, 8, 1, 0};
        int [] compareAnotherArray = {9, 5, 2 ,1 , 0, 0, 5};

        boolean testResult = Library.containsDuplicates(compareArray);
        boolean anotherTestResult = Library.containsDuplicates(compareAnotherArray);

        assertFalse(testResult = false);
        assertTrue(anotherTestResult = true);
    }

    @Test void testAverage() {
        int [] averageTest = {3, 6, 1, 0, 8, 0};
        double averageResult = Library.average(averageTest);
        assertTrue(averageResult == 3);
    }

    @Test void testLowestAverage() {
        int[][] testMatrix = {{4, 2, 1}, {0, 6, 2}, {0, 2, 0}};
        int[] lowestArray = Library.lowestAverage(testMatrix);
        assertEquals(lowestArray, testMatrix[2]);

    }

    @Test void testAnalyzeTemps() {
        int [][] weeklyMonthTemps = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };

        String exepectedString = "High: 72\n" +
                "Low: 51\n" +
                "Never saw temperature: 63\n" +
                "Never saw temperature: 67\n" +
                "Never saw temperature: 68\n" +
                "Never saw temperature: 69";

        assertEquals(exepectedString, Library.analyzeWeatherTemps(weeklyMonthTemps));
    }

    @Test void testTally(){
        ArrayList<String> votesTest1 = new ArrayList<>();
        votesTest1.add("Bush");
        votesTest1.add("Bush");
        votesTest1.add("Bush");
        votesTest1.add("Shrub");
        votesTest1.add("Hedge");
        votesTest1.add("Shrub");
        votesTest1.add("Bush");
        votesTest1.add("Hedge");
        votesTest1.add("Bush");

        assertEquals("Bush recieved the most votes!", Library.tally(votesTest1));
    }
}
